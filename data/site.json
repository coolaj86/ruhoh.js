{"safe":false,"auto":true,"server":true,"server_port":4000,"source":"/Users/jade/Dropbox/active/jekyll-bootstrap","destination":"/Users/jade/Dropbox/active/jekyll-bootstrap/_site","plugins":"/Users/jade/Dropbox/active/jekyll-bootstrap/_plugins","future":true,"lsi":false,"pygments":true,"markdown":"maruku","permalink":"/:categories/:year/:month/:day/:title","markdown_ext":"markdown,mkd,mkdn,md","textile_ext":"textile","maruku":{"use_tex":false,"use_divs":false,"png_engine":"blahtex","png_dir":"images/latex","png_url":"/images/latex"},"rdiscount":{"extensions":[]},"redcarpet":{"extensions":[]},"kramdown":{"auto_ids":true,"footnote_nr":1,"entity_output":"as_char","toc_levels":"1..6","use_coderay":false,"coderay":{"coderay_wrap":"div","coderay_line_numbers":"inline","coderay_line_number_start":1,"coderay_tab_width":4,"coderay_bold_every":10,"coderay_css":"style"}},"exclude":[".rvmrc",".rbenv-version","README.md","Rakefile","changelog.md"],"title":"Jekyll Bootstrap","tagline":"Site Tagline","author":{"name":"Name Lastname","email":"blah@email.test","github":"username","twitter":"username","feedburner":"feedname"},"production_url":"http://username.github.com","JB":{"version":"0.2.0","BASE_PATH":false,"ASSET_PATH":false,"archive_path":"/archive.html","categories_path":"/categories.html","tags_path":"/tags.html","comments":{"provider":"disqus","disqus":{"short_name":"jekyllbootstrap"},"livefyre":{"site_id":123},"intensedebate":{"account":"123abc"},"facebook":{"appid":123,"num_posts":5,"width":580,"colorscheme":"light"}},"analytics":{"provider":"google","google":{"tracking_id":"UA-123-12"},"getclicky":{"site_id":null}},"sharing":{"provider":false}},"time":"2012-02-08 22:29:35 -0800","posts":["<p>This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&#8217;ll learn exactly <em>how</em> Jekyll does what it does.</p>\n\n<h2 id='overview'>Overview</h2>\n\n<h3 id='what_is_jekyll'>What is Jekyll?</h3>\n\n<p>Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &#8220;a simple, blog aware, static site generator&#8221;.</p>\n\n<h3 id='examples'>Examples</h3>\n\n<p>This website is created with Jekyll. <a href='https://github.com/mojombo/jekyll/wiki/Sites'>Other Jekyll websites</a>.</p>\n\n<h3 id='what_does_jekyll_do'>What does Jekyll Do?</h3>\n\n<p>Jekyll is a ruby gem you install on your local system. Once there you can call <code>jekyll --server</code> on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.</p>\n\n<p>Once parsed, Jekyll stores the result in a self-contained static <code>_site</code> folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.</p>\n\n<p>You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once <em>beforehand</em> and caches the <em>entire website</em> in a folder for serving statically.</p>\n\n<h3 id='jekyll_is_not_blogging_software'>Jekyll is Not Blogging Software</h3>\n\n<p><strong>Jekyll is a parsing engine.</strong></p>\n\n<p>Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.</p>\n\n<h3 id='why_should_i_care'>Why Should I Care?</h3>\n\n<p>Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.</p>\n\n<p>Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.</p>\n\n<p><strong>Developers like Jekyll because we can write content like we write code:</strong></p>\n\n<ul>\n<li>Ability to write content in markdown or textile in your favorite text-editor.</li>\n\n<li>Ability to write and preview your content via localhost.</li>\n\n<li>No internet connection required.</li>\n\n<li>Ability to publish via git.</li>\n\n<li>Ability to host your blog on a static web-server.</li>\n\n<li>Ability to host freely on GitHub Pages.</li>\n\n<li>No database required.</li>\n</ul>\n\n<h2 id='next_steps'>Next Steps</h2>\n\n<p>Please take a look at <a href='' /> or jump right into <a href=''>Usage</a> if you&#8217;d like.</p>"],"pages":["\n\n\n\n\n\n  \n    \n    \n    \n    \n  \n    \n      <h2>2011</h2>\n      <h3>December</h3>\n      <ul>\n    \n  \n    <li><span>December 29, 2011</span> &raquo; <a href=\"/lessons/2011/12/29/jekyll-introduction\">Jekyll Introduction</a></li>\n  \n    \n      </ul>\n    \n  \n\n","<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n \n <title>Jekyll Bootstrap</title>\n <link href=\"http://username.github.com/atom.xml\" rel=\"self\"/>\n <link href=\"http://username.github.com\"/>\n <updated>2012-02-08T22:29:35-08:00</updated>\n <id>http://username.github.com</id>\n <author>\n   <name>Name Lastname</name>\n   <email>blah@email.test</email>\n </author>\n\n \n <entry>\n   <title>Jekyll Introduction</title>\n   <link href=\"http://username.github.com/lessons/2011/12/29/jekyll-introduction\"/>\n   <updated>2011-12-29T00:00:00-08:00</updated>\n   <id>hhttp://username.github.com/lessons/2011/12/29/jekyll-introduction</id>\n   <content type=\"html\">&lt;p&gt;This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&amp;#8217;ll learn exactly &lt;em&gt;how&lt;/em&gt; Jekyll does what it does.&lt;/p&gt;\n\n&lt;h2 id='overview'&gt;Overview&lt;/h2&gt;\n\n&lt;h3 id='what_is_jekyll'&gt;What is Jekyll?&lt;/h3&gt;\n\n&lt;p&gt;Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &amp;#8220;a simple, blog aware, static site generator&amp;#8221;.&lt;/p&gt;\n\n&lt;h3 id='examples'&gt;Examples&lt;/h3&gt;\n\n&lt;p&gt;This website is created with Jekyll. &lt;a href='https://github.com/mojombo/jekyll/wiki/Sites'&gt;Other Jekyll websites&lt;/a&gt;.&lt;/p&gt;\n\n&lt;h3 id='what_does_jekyll_do'&gt;What does Jekyll Do?&lt;/h3&gt;\n\n&lt;p&gt;Jekyll is a ruby gem you install on your local system. Once there you can call &lt;code&gt;jekyll --server&lt;/code&gt; on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.&lt;/p&gt;\n\n&lt;p&gt;Once parsed, Jekyll stores the result in a self-contained static &lt;code&gt;_site&lt;/code&gt; folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.&lt;/p&gt;\n\n&lt;p&gt;You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once &lt;em&gt;beforehand&lt;/em&gt; and caches the &lt;em&gt;entire website&lt;/em&gt; in a folder for serving statically.&lt;/p&gt;\n\n&lt;h3 id='jekyll_is_not_blogging_software'&gt;Jekyll is Not Blogging Software&lt;/h3&gt;\n\n&lt;p&gt;&lt;strong&gt;Jekyll is a parsing engine.&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.&lt;/p&gt;\n\n&lt;h3 id='why_should_i_care'&gt;Why Should I Care?&lt;/h3&gt;\n\n&lt;p&gt;Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.&lt;/p&gt;\n\n&lt;p&gt;Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Developers like Jekyll because we can write content like we write code:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Ability to write content in markdown or textile in your favorite text-editor.&lt;/li&gt;\n\n&lt;li&gt;Ability to write and preview your content via localhost.&lt;/li&gt;\n\n&lt;li&gt;No internet connection required.&lt;/li&gt;\n\n&lt;li&gt;Ability to publish via git.&lt;/li&gt;\n\n&lt;li&gt;Ability to host your blog on a static web-server.&lt;/li&gt;\n\n&lt;li&gt;Ability to host freely on GitHub Pages.&lt;/li&gt;\n\n&lt;li&gt;No database required.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2 id='next_steps'&gt;Next Steps&lt;/h2&gt;\n\n&lt;p&gt;Please take a look at &lt;a href='' /&gt; or jump right into &lt;a href=''&gt;Usage&lt;/a&gt; if you&amp;#8217;d like.&lt;/p&gt;</content>\n </entry>\n \n \n</feed>","\n\n<ul class=\"tag_box inline\">\n  \n  \n\n\n  \n     \n    \t<li><a href=\"/categories.html#lessons-ref\">\n    \t\tlessons <span>1</span>\n    \t</a></li>\n    \n  \n\n\n</ul>\n\n\n \n  <h2 id=\"lessons-ref\">lessons</h2>\n  <ul>\n      \n    \n\n\n  \n    \n    \t\n    \t<li><a href=\"/lessons/2011/12/29/jekyll-introduction\">Jekyll Introduction</a></li>\n    \t\n    \n  \n\n\n\n  </ul>\n\n\n","<p>Read <a href='http://jekyllbootstrap.com/usage/jekyll-quick-start.html'>Jekyll Quick Start</a></p>\n\n<p>Complete usage and documentation available at: <a href='http://jekyllbootstrap.com'>Jekyll Bootstrap</a></p>\n\n<h2 id='update_author_attributes'>Update Author Attributes</h2>\n\n<p>In <code>_config.yml</code> remember to specify your own data:</p>\n\n<pre><code>title : My Blog =)\n\nauthor :\n  name : Name Lastname\n  email : blah@email.test\n  github : username\n  twitter : username</code></pre>\n\n<p>The theme should reference these variables whenever needed.</p>\n\n<h2 id='sample_posts'>Sample Posts</h2>\n\n<p>This blog contains sample posts which help stage pages and blog data. When you don&#8217;t need the samples anymore just delete the <code>_posts/core-samples</code> folder.</p>\n\n<pre><code>$ rm -rf _posts/core-samples</code></pre>\n\n<p>Here&#8217;s a sample &#8220;posts list&#8221;.</p>\n<ul class='posts'>\n  \n    <li><span>29 Dec 2011</span> &raquo; <a href='/lessons/2011/12/29/jekyll-introduction'>Jekyll Introduction</a></li>\n  \n</ul>\n<h2 id='todo'>To-Do</h2>\n\n<p>This theme is still unfinished. If you&#8217;d like to be added as a contributor, <a href='http://github.com/plusjade/jekyll-bootstrap'>please fork</a>! We need to clean up the themes, make theme usage guides with theme-specific markup examples.</p>","{% include JB/setup %}\n\n<h2>All Pages</h2>\n<ul>\n{% assign pages_list = site.pages %}\n{% include JB/pages_list %}\n</ul>\n","{% for page in site.pages %}\n{{site.production_url}}{{ page.url }}{% endfor %}\n{% for post in site.posts %}\n{{site.production_url}}{{ post.url }}{% endfor %}","{% include JB/setup %}\n\n<ul class=\"tag_box inline\">\n  {% assign tags_list = site.tags %}  \n  {% include JB/tags_list %}\n</ul>\n\n\n{% for tag in site.tags %} \n  <h2 id=\"{{ tag[0] }}-ref\">{{ tag[0] }}</h2>\n  <ul>\n    {% assign pages_list = tag[1] %}  \n    {% include JB/pages_list %}\n  </ul>\n{% endfor %}\n"],"html_pages":["\n\n\n\n\n\n  \n    \n    \n    \n    \n  \n    \n      <h2>2011</h2>\n      <h3>December</h3>\n      <ul>\n    \n  \n    <li><span>December 29, 2011</span> &raquo; <a href=\"/lessons/2011/12/29/jekyll-introduction\">Jekyll Introduction</a></li>\n  \n    \n      </ul>\n    \n  \n\n","\n\n<ul class=\"tag_box inline\">\n  \n  \n\n\n  \n     \n    \t<li><a href=\"/categories.html#lessons-ref\">\n    \t\tlessons <span>1</span>\n    \t</a></li>\n    \n  \n\n\n</ul>\n\n\n \n  <h2 id=\"lessons-ref\">lessons</h2>\n  <ul>\n      \n    \n\n\n  \n    \n    \t\n    \t<li><a href=\"/lessons/2011/12/29/jekyll-introduction\">Jekyll Introduction</a></li>\n    \t\n    \n  \n\n\n\n  </ul>\n\n\n","<p>Read <a href='http://jekyllbootstrap.com/usage/jekyll-quick-start.html'>Jekyll Quick Start</a></p>\n\n<p>Complete usage and documentation available at: <a href='http://jekyllbootstrap.com'>Jekyll Bootstrap</a></p>\n\n<h2 id='update_author_attributes'>Update Author Attributes</h2>\n\n<p>In <code>_config.yml</code> remember to specify your own data:</p>\n\n<pre><code>title : My Blog =)\n\nauthor :\n  name : Name Lastname\n  email : blah@email.test\n  github : username\n  twitter : username</code></pre>\n\n<p>The theme should reference these variables whenever needed.</p>\n\n<h2 id='sample_posts'>Sample Posts</h2>\n\n<p>This blog contains sample posts which help stage pages and blog data. When you don&#8217;t need the samples anymore just delete the <code>_posts/core-samples</code> folder.</p>\n\n<pre><code>$ rm -rf _posts/core-samples</code></pre>\n\n<p>Here&#8217;s a sample &#8220;posts list&#8221;.</p>\n<ul class='posts'>\n  \n    <li><span>29 Dec 2011</span> &raquo; <a href='/lessons/2011/12/29/jekyll-introduction'>Jekyll Introduction</a></li>\n  \n</ul>\n<h2 id='todo'>To-Do</h2>\n\n<p>This theme is still unfinished. If you&#8217;d like to be added as a contributor, <a href='http://github.com/plusjade/jekyll-bootstrap'>please fork</a>! We need to clean up the themes, make theme usage guides with theme-specific markup examples.</p>","{% include JB/setup %}\n\n<h2>All Pages</h2>\n<ul>\n{% assign pages_list = site.pages %}\n{% include JB/pages_list %}\n</ul>\n","{% include JB/setup %}\n\n<ul class=\"tag_box inline\">\n  {% assign tags_list = site.tags %}  \n  {% include JB/tags_list %}\n</ul>\n\n\n{% for tag in site.tags %} \n  <h2 id=\"{{ tag[0] }}-ref\">{{ tag[0] }}</h2>\n  <ul>\n    {% assign pages_list = tag[1] %}  \n    {% include JB/pages_list %}\n  </ul>\n{% endfor %}\n"],"categories":{"lessons":["<p>This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&#8217;ll learn exactly <em>how</em> Jekyll does what it does.</p>\n\n<h2 id='overview'>Overview</h2>\n\n<h3 id='what_is_jekyll'>What is Jekyll?</h3>\n\n<p>Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &#8220;a simple, blog aware, static site generator&#8221;.</p>\n\n<h3 id='examples'>Examples</h3>\n\n<p>This website is created with Jekyll. <a href='https://github.com/mojombo/jekyll/wiki/Sites'>Other Jekyll websites</a>.</p>\n\n<h3 id='what_does_jekyll_do'>What does Jekyll Do?</h3>\n\n<p>Jekyll is a ruby gem you install on your local system. Once there you can call <code>jekyll --server</code> on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.</p>\n\n<p>Once parsed, Jekyll stores the result in a self-contained static <code>_site</code> folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.</p>\n\n<p>You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once <em>beforehand</em> and caches the <em>entire website</em> in a folder for serving statically.</p>\n\n<h3 id='jekyll_is_not_blogging_software'>Jekyll is Not Blogging Software</h3>\n\n<p><strong>Jekyll is a parsing engine.</strong></p>\n\n<p>Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.</p>\n\n<h3 id='why_should_i_care'>Why Should I Care?</h3>\n\n<p>Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.</p>\n\n<p>Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.</p>\n\n<p><strong>Developers like Jekyll because we can write content like we write code:</strong></p>\n\n<ul>\n<li>Ability to write content in markdown or textile in your favorite text-editor.</li>\n\n<li>Ability to write and preview your content via localhost.</li>\n\n<li>No internet connection required.</li>\n\n<li>Ability to publish via git.</li>\n\n<li>Ability to host your blog on a static web-server.</li>\n\n<li>Ability to host freely on GitHub Pages.</li>\n\n<li>No database required.</li>\n</ul>\n\n<h2 id='next_steps'>Next Steps</h2>\n\n<p>Please take a look at <a href='' /> or jump right into <a href=''>Usage</a> if you&#8217;d like.</p>"]},"tags":{"intro":["<p>This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&#8217;ll learn exactly <em>how</em> Jekyll does what it does.</p>\n\n<h2 id='overview'>Overview</h2>\n\n<h3 id='what_is_jekyll'>What is Jekyll?</h3>\n\n<p>Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &#8220;a simple, blog aware, static site generator&#8221;.</p>\n\n<h3 id='examples'>Examples</h3>\n\n<p>This website is created with Jekyll. <a href='https://github.com/mojombo/jekyll/wiki/Sites'>Other Jekyll websites</a>.</p>\n\n<h3 id='what_does_jekyll_do'>What does Jekyll Do?</h3>\n\n<p>Jekyll is a ruby gem you install on your local system. Once there you can call <code>jekyll --server</code> on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.</p>\n\n<p>Once parsed, Jekyll stores the result in a self-contained static <code>_site</code> folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.</p>\n\n<p>You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once <em>beforehand</em> and caches the <em>entire website</em> in a folder for serving statically.</p>\n\n<h3 id='jekyll_is_not_blogging_software'>Jekyll is Not Blogging Software</h3>\n\n<p><strong>Jekyll is a parsing engine.</strong></p>\n\n<p>Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.</p>\n\n<h3 id='why_should_i_care'>Why Should I Care?</h3>\n\n<p>Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.</p>\n\n<p>Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.</p>\n\n<p><strong>Developers like Jekyll because we can write content like we write code:</strong></p>\n\n<ul>\n<li>Ability to write content in markdown or textile in your favorite text-editor.</li>\n\n<li>Ability to write and preview your content via localhost.</li>\n\n<li>No internet connection required.</li>\n\n<li>Ability to publish via git.</li>\n\n<li>Ability to host your blog on a static web-server.</li>\n\n<li>Ability to host freely on GitHub Pages.</li>\n\n<li>No database required.</li>\n</ul>\n\n<h2 id='next_steps'>Next Steps</h2>\n\n<p>Please take a look at <a href='' /> or jump right into <a href=''>Usage</a> if you&#8217;d like.</p>"],"beginner":["<p>This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&#8217;ll learn exactly <em>how</em> Jekyll does what it does.</p>\n\n<h2 id='overview'>Overview</h2>\n\n<h3 id='what_is_jekyll'>What is Jekyll?</h3>\n\n<p>Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &#8220;a simple, blog aware, static site generator&#8221;.</p>\n\n<h3 id='examples'>Examples</h3>\n\n<p>This website is created with Jekyll. <a href='https://github.com/mojombo/jekyll/wiki/Sites'>Other Jekyll websites</a>.</p>\n\n<h3 id='what_does_jekyll_do'>What does Jekyll Do?</h3>\n\n<p>Jekyll is a ruby gem you install on your local system. Once there you can call <code>jekyll --server</code> on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.</p>\n\n<p>Once parsed, Jekyll stores the result in a self-contained static <code>_site</code> folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.</p>\n\n<p>You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once <em>beforehand</em> and caches the <em>entire website</em> in a folder for serving statically.</p>\n\n<h3 id='jekyll_is_not_blogging_software'>Jekyll is Not Blogging Software</h3>\n\n<p><strong>Jekyll is a parsing engine.</strong></p>\n\n<p>Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.</p>\n\n<h3 id='why_should_i_care'>Why Should I Care?</h3>\n\n<p>Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.</p>\n\n<p>Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.</p>\n\n<p><strong>Developers like Jekyll because we can write content like we write code:</strong></p>\n\n<ul>\n<li>Ability to write content in markdown or textile in your favorite text-editor.</li>\n\n<li>Ability to write and preview your content via localhost.</li>\n\n<li>No internet connection required.</li>\n\n<li>Ability to publish via git.</li>\n\n<li>Ability to host your blog on a static web-server.</li>\n\n<li>Ability to host freely on GitHub Pages.</li>\n\n<li>No database required.</li>\n</ul>\n\n<h2 id='next_steps'>Next Steps</h2>\n\n<p>Please take a look at <a href='' /> or jump right into <a href=''>Usage</a> if you&#8217;d like.</p>"],"jekyll":["<p>This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&#8217;ll learn exactly <em>how</em> Jekyll does what it does.</p>\n\n<h2 id='overview'>Overview</h2>\n\n<h3 id='what_is_jekyll'>What is Jekyll?</h3>\n\n<p>Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &#8220;a simple, blog aware, static site generator&#8221;.</p>\n\n<h3 id='examples'>Examples</h3>\n\n<p>This website is created with Jekyll. <a href='https://github.com/mojombo/jekyll/wiki/Sites'>Other Jekyll websites</a>.</p>\n\n<h3 id='what_does_jekyll_do'>What does Jekyll Do?</h3>\n\n<p>Jekyll is a ruby gem you install on your local system. Once there you can call <code>jekyll --server</code> on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.</p>\n\n<p>Once parsed, Jekyll stores the result in a self-contained static <code>_site</code> folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.</p>\n\n<p>You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once <em>beforehand</em> and caches the <em>entire website</em> in a folder for serving statically.</p>\n\n<h3 id='jekyll_is_not_blogging_software'>Jekyll is Not Blogging Software</h3>\n\n<p><strong>Jekyll is a parsing engine.</strong></p>\n\n<p>Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.</p>\n\n<h3 id='why_should_i_care'>Why Should I Care?</h3>\n\n<p>Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.</p>\n\n<p>Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.</p>\n\n<p><strong>Developers like Jekyll because we can write content like we write code:</strong></p>\n\n<ul>\n<li>Ability to write content in markdown or textile in your favorite text-editor.</li>\n\n<li>Ability to write and preview your content via localhost.</li>\n\n<li>No internet connection required.</li>\n\n<li>Ability to publish via git.</li>\n\n<li>Ability to host your blog on a static web-server.</li>\n\n<li>Ability to host freely on GitHub Pages.</li>\n\n<li>No database required.</li>\n</ul>\n\n<h2 id='next_steps'>Next Steps</h2>\n\n<p>Please take a look at <a href='' /> or jump right into <a href=''>Usage</a> if you&#8217;d like.</p>"],"tutorial":["<p>This Jekyll introduction will outline specifically what Jekyll is and why you would want to use it. Directly following the intro we&#8217;ll learn exactly <em>how</em> Jekyll does what it does.</p>\n\n<h2 id='overview'>Overview</h2>\n\n<h3 id='what_is_jekyll'>What is Jekyll?</h3>\n\n<p>Jekyll is a parsing engine bundled as a ruby gem used to build static websites from dynamic components such as templates, partials, liquid code, markdown, etc. Jekyll is known as &#8220;a simple, blog aware, static site generator&#8221;.</p>\n\n<h3 id='examples'>Examples</h3>\n\n<p>This website is created with Jekyll. <a href='https://github.com/mojombo/jekyll/wiki/Sites'>Other Jekyll websites</a>.</p>\n\n<h3 id='what_does_jekyll_do'>What does Jekyll Do?</h3>\n\n<p>Jekyll is a ruby gem you install on your local system. Once there you can call <code>jekyll --server</code> on a directory and provided that directory is setup in a way jekyll expects, it will do magic stuff like parse markdown/textile files, compute categories, tags, permalinks, and construct your pages from layout templates and partials.</p>\n\n<p>Once parsed, Jekyll stores the result in a self-contained static <code>_site</code> folder. The intention here is that you can serve all contents in this folder statically from a plain static web-server.</p>\n\n<p>You can think of Jekyll as a normalish dynamic blog but rather than parsing content, templates, and tags on each request, Jekyll does this once <em>beforehand</em> and caches the <em>entire website</em> in a folder for serving statically.</p>\n\n<h3 id='jekyll_is_not_blogging_software'>Jekyll is Not Blogging Software</h3>\n\n<p><strong>Jekyll is a parsing engine.</strong></p>\n\n<p>Jekyll does not come with any content nor does it have any templates or design elements. This is a common source of confusion when getting started. Jekyll does not come with anything you actually use or see on your website - you have to make it.</p>\n\n<h3 id='why_should_i_care'>Why Should I Care?</h3>\n\n<p>Jekyll is very minimalistic and very efficient. The most important thing to realize about Jekyll is that it creates a static representation of your website requiring only a static web-server. Traditional dynamic blogs like Wordpress require a database and server-side code. Heavily trafficked dynamic blogs must employ a caching layer that ultimately performs the same job Jekyll sets out to do; serve static content.</p>\n\n<p>Therefore if you like to keep things simple and you prefer the command-line over an admin panel UI then give Jekyll a try.</p>\n\n<p><strong>Developers like Jekyll because we can write content like we write code:</strong></p>\n\n<ul>\n<li>Ability to write content in markdown or textile in your favorite text-editor.</li>\n\n<li>Ability to write and preview your content via localhost.</li>\n\n<li>No internet connection required.</li>\n\n<li>Ability to publish via git.</li>\n\n<li>Ability to host your blog on a static web-server.</li>\n\n<li>Ability to host freely on GitHub Pages.</li>\n\n<li>No database required.</li>\n</ul>\n\n<h2 id='next_steps'>Next Steps</h2>\n\n<p>Please take a look at <a href='' /> or jump right into <a href=''>Usage</a> if you&#8217;d like.</p>"]}}